{% sw_extends '@Storefront/storefront/base.html.twig' %}

{% block base_script_jquery %}
    {% if config('CloudImage.config.ciActivation') and config('CloudImage.config.ciToken') != '' %}
        {% if config('CloudImage.config.ciLazyLoading') %}
            <!-- Add lazyload library -->
            <script>
                window.lazySizesConfig = window.lazySizesConfig || {};
                window.lazySizesConfig.init = false;
            </script>
            <script src="https://cdn.scaleflex.it/filerobot/js-cloudimage-responsive/lazysizes.min.js"></script>
        {% endif %}

        <!-- Add js-cloudimage-responsiv library -->
        <script src="https://scaleflex.cloudimg.io/v7/plugins/js-cloudimage-responsive/4.8.12/plain/js-cloudimage-responsive.min.js?vh=1ee401&func=proxy"></script>
        <!-- Initialize cloudimage responsive -->
        <script>
            let ciToken = "{{ config('CloudImage.config.ciToken') }}";
            let explodedToken = ciToken.split(".");
            let token = explodedToken.shift();
            let domain = explodedToken.join('.');

            //setup config for Cloudimage
            let config = {};
            config.token = token;
            if (domain !== '') {
                config.domain = domain;
            }

            {% if config('CloudImage.config.ciLazyLoading') %}
            config.lazyLoading = true;
            {% endif %}

            {% if config('CloudImage.config.ciUseOriginalUrl') and config('CloudImage.config.ciCustomLibrary') == '' %}
            config.doNotReplaceURL = true;
            {% else %}
            config.doNotReplaceURL = false;
            {% endif %}

            {% if config('CloudImage.config.ciPreventImageUpsize') %}
            config.params = 'org_if_sml=1&{{ config('CloudImage.config.ciCustomLibrary') }}';
            {% else %}
            config.params = '{{ config('CloudImage.config.ciCustomLibrary') }}';
            {% endif %}

            {% if config('CloudImage.config.ciRemoveV7') %}
            config.apiVersion = null;
            {% endif %}

            {% if config('CloudImage.config.ciMaximumPixelRatio') == '1' %}
            config.devicePixelRatioList = [1];
            {% endif %}

            {% if config('CloudImage.config.ciMaximumPixelRatio') == '1.5' %}
            config.devicePixelRatioList = [1, 1.5];
            {% endif %}

            {% if config('CloudImage.config.ciMaximumPixelRatio') == '2' %}
            config.devicePixelRatioList = [1, 1.5, 2];
            {% endif %}

            {% if config('CloudImage.config.ciCustomFunction') %}
            config.processQueryString = function (props) {{ config('CloudImage.config.ciCustomFunction') }};
            {% endif %}

            window.ciResponsive = new window.CIResponsive(config);

            {% if config('CloudImage.config.ciLazyLoading') %}
            window.lazySizes.init();
            {% endif %}
        </script>

        {#add script check http request is calling#}
        <script type='text/javascript'>
            var s_ajaxListener = new Object();
            s_ajaxListener.tempOpen = XMLHttpRequest.prototype.open;
            s_ajaxListener.tempSend = XMLHttpRequest.prototype.send;
            s_ajaxListener.callback = function () {
                let rerenderImage = setInterval(function () {
                    window.ciResponsive.process();
                }, 400);

                setTimeout(function () {
                    clearInterval(rerenderImage);
                }, 5000);
            }

            XMLHttpRequest.prototype.open = function(a,b) {
                if (!a) var a='';
                if (!b) var b='';
                s_ajaxListener.tempOpen.apply(this, arguments);
                s_ajaxListener.method = a;
                s_ajaxListener.url = b;
                if (a.toLowerCase() == 'get') {
                    s_ajaxListener.data = b.split('?');
                    s_ajaxListener.data = s_ajaxListener.data[1];
                }
            }

            XMLHttpRequest.prototype.send = function(a,b) {
                if (!a) var a='';
                if (!b) var b='';
                s_ajaxListener.tempSend.apply(this, arguments);
                if(s_ajaxListener.method.toLowerCase() == 'post')s_ajaxListener.data = a;
                s_ajaxListener.callback();
            }
        </script>
    {% endif %}
{% endblock %}